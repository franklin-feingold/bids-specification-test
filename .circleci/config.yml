version: 2
jobs:
  build:
    docker:
      - image: circleci/python:3.6.6
    steps:
      - checkout
      - run: sudo chown -R circleci:circleci /usr/local/bin
      - run: sudo chown -R circleci:circleci /usr/local/lib/python3.6/site-packages
      - restore_cache:  # ensure this step occurs *before* installing dependencies
          key: deps9-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
      - run:
          command: |
            sudo pip install pip==18.0
            sudo pip install pipenv==2018.7.1
            pipenv install
      - save_cache:
          key: deps9-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
          paths:
            - ".venv"
            - "/usr/local/bin"
            - "/usr/local/lib/python3.6/site-packages"
      - run:
          name: generate docs
          command: pipenv run mkdocs build --clean --strict --verbose
      - store_artifacts:
          path: site
# Auto changelog collector
  github-changelog-generator:
    working_directory: ~/build
    docker: 
      - image: ferrarimarco/github-changelog-generator:1.14.3
    steps:
      - setup_remote_docker:
           version: 17.11.0-ce
      - checkout
      - run:
           name: Clone repo and Build changelog
           working_directory: ~/build
           command: |
             if git log -1 --pretty=%s | grep Merge* ; then
             if git log -1 --pretty=%b | grep release ; then
             echo "New release, do nothing"
             else
             cat ~/build/CHANGES.md
             github_changelog_generator --user franklin-feingold --project bids-specification-test --token ${CHANGE_TOKEN} --output TEST3.md --base ~/build/CHANGES.md --header-label Changelog --no-issues --no-issues-wo-labels --no-filter-by-milestone --no-compare-link --pr-label ""
             cat ~/build/TEST3.md
             mv ~/build/TEST3.md ~/build/src/TEST3.md
             fi
             else
             echo "Not a PR merge commit"
             fi
      - persist_to_workspace:
             root: .
             paths: src

# Clear remark test
  remark:
    working_directory: ~/build
    docker: 
      - image: circleci/node:8.9.1
      - image: mongo:3.4.4
    steps:
      - setup_remote_docker:
           version: 17.11.0-ce                          
      - attach_workspace:
            at: ~/build/src/
      - run:
           name: update-npm
           command: 'sudo npm install -g npm@latest'
      - restore_cache: # special step to restore the dependency cache
           key: dependency-cache-{{ checksum "package.json" }}
      - run:
           name: install-npm-wee
           command: npm install      
      - run:
           name: install remark
           command: npm install remark-cli@5.0.0 remark-lint@6.0.2 remark-preset-lint-recommended@3.0.2 remark-preset-lint-markdown-style-guide@2.1.2
      - persist_to_workspace:
             root: .
             paths: src   



# Push built changelog to repo
  push:
    working_directory: ~/build
    docker: 
      - image: circleci/openjdk:8-jdk
    steps:
      - setup_remote_docker:
           version: 17.11.0-ce                          
      - checkout
      - attach_workspace:
            at: ~/build/src/
      - run:
           name: test
           command: cat ~/build/src/TEST3.md
      - deploy:
           name: Changelog deployment
           working_directory: ~/build
           command: |
             if git log -1 --pretty=%s | grep Merge* ; then
             if git log -1 --pretty=%b | grep release ; then
             echo "New release, do nothing"
             else
             git config credential.helper 'cache --timeout=120'
             git config user.email "franklin.feingold@gmail.com"
             git config user.name "franklin-feingold"
             git add src/TEST3.md
             git commit -m "autobuild changelog"
             git push https://${CHANGE_TOKEN}@github.com/franklin-feingold/bids-specification-test.git master
             fi
             else
             echo "Not a PR merge commit"
             fi

workflows:
  version: 2
  search_build:
    jobs:
      - build
      - github-changelog-generator
      - remark:
          requires:
               - github-changelog-generator
      - push:
          requires:
               - remark
